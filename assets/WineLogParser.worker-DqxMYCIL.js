(function(){"use strict";async function*D(t,e){var c,m;let i=0;const R=new TextDecoder("utf8"),w=t.getReader();let s=await w.read();s.value&&(i+=s.value.length,(c=e==null?void 0:e.onReadProgress)==null||c.call(e,i));let n=s.value?R.decode(s.value,{stream:!0}):"";const A=/\r?\n/gm;let u=0;for(;;){const d=A.exec(n);if(!d){if(s.done)break;const r=n.slice(u);s=await w.read(),s.value&&(i+=s.value.length,(m=e==null?void 0:e.onReadProgress)==null||m.call(e,i));const T=s.value?R.decode(s.value,{stream:!0}):"";n=r+T,u=A.lastIndex=0;continue}yield n.substring(u,d.index),u=A.lastIndex}u<n.length&&(yield n.slice(u))}var E=(t=>(t.CALL="Call",t.RETURN="Ret",t.MESSAGE="Message",t))(E||{});const U=/^\d+\.\d+:/,k=/(?:(?<timestamp>\d+\.\d+):)?(?<pid>[a-f0-9]{4}):(?<tid>[a-f0-9]{4}):(?<type>[a-zA-Z_:]+) +(?<message>.+)/,$=/(?:(?:(?<module>[\w]+)\.(?<func>[\w]+))|(?<unknown>.+))\((?<args>.+)?\)(?: retval=(?<retval>[a-f0-9]+))?(?: ret=(?<callsite>[a-f0-9]+))?/,N=/L"(?<string>.+)"/,F=/[^\\]+$/;async function y(t,e){if(typeof t=="string")return y(new Blob([t]),e);if(t instanceof Blob)return y(t.stream(),e);const i=t,R=[],w={},s={},n={},A={},u=D(i,{onReadProgress:e==null?void 0:e.onReadProgress});let c=0,m=1;const d=[];let r="",T=0,L;for(;;){if(c===2&&(d.length?r=d.shift():c=0),c!==2){const l=await u.next();if(l.done)break;r=l.value}const M=k.exec(r.slice(m));if(M){if(m===1){const l=U.exec(r);if(l){m=l[0].length+1,c=2,d.push(r);continue}}c=1,d.push(r.slice(0,M.index+m),r.slice(M.index+m));continue}const P=r.match(k);if(P){if(c===1){d.push(r);continue}}else{c===1&&(d[0]+=r,c=2);continue}const{pid:a,tid:h,type:_,message:C,timestamp:S}=P.groups;let g=w[a];g||(g={id:a,name:null,threads:[]},w[a]=g,s[a]={},n[a]={},A[a]={});let v=s[a][h];v||(v={id:h,name:null},s[a][h]=v,w[a].threads.push(v));const o=n[a][h];let f;const x={id:T,process:g,thread:v};if(S){const l=parseFloat(S)*1e3|0;L||(L=l),x.time=l-L}switch(_){case E.CALL:case E.RETURN:const l=C.match($);if(!l)throw new Error(`could not parse Call/Ret line: '${r}'`);const{groups:{unknown:G,module:O,func:W,args:b,retval:j,callsite:z}}=l;if(G)continue;const H={module:O,func:W,callsite:z};_===E.CALL?(f={type:E.CALL,...x,...H,args:b==null?void 0:b.split(",")},n[a][h]=f):(f={type:E.RETURN,...x,...H,retval:j},o&&f.callsite===o.callsite&&(o.return=f,A[a][h]===o&&(o.inlinable=!0)),n[a][h]=o==null?void 0:o.parent);break;default:const[Z,I="",B=""]=_.split(":");if(f={...x,channel:I,class:Z,logger:B,message:C},I==="threadname"){const p=C.match(N);p&&(v.name=p.groups.string)}else if(I==="module"&&B==="get_load_order"){const p=C.match(N);if(p&&!g.path&&(g.path=p.groups.string.replaceAll("\\\\","\\"),g.name=g.path.match(F)[0]),!p)throw new Error(`could not extract wide string from message: ${C}`)}}o&&(f.parent=o),R.push(f),A[a][h]=f,++T}return{processes:Object.values(w),entries:R}}self.addEventListener("message",async t=>{const e=t.data;try{const i=await y(e,{onReadProgress(R){self.postMessage({type:"progress",bytesRead:R})}});self.postMessage({type:"complete",result:i})}catch(i){self.postMessage({type:"error",error:i})}})})();
